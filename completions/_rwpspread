#compdef rwpspread

autoload -U is-at-least

_rwpspread() {
    typeset -A opt_args
    typeset -a _arguments_options
    local ret=1

    if is-at-least 5.2; then
        _arguments_options=(-s -S -C)
    else
        _arguments_options=(-s -C)
    fi

    local context curcontext="$curcontext" state line
    _arguments "${_arguments_options[@]}" \
'-i+[Image file path]:IMAGE: ' \
'--image=[Image file path]:IMAGE: ' \
'-o+[Output directory path]:OUTPUT: ' \
'--output=[Output directory path]:OUTPUT: ' \
'-a+[Do not downscale the base image, align the layout instead]:ALIGN:(tl tr tc bl br bc rc lc c)' \
'--align=[Do not downscale the base image, align the layout instead]:ALIGN:(tl tr tc bl br bc rc lc c)' \
'-b+[Wallpaper setter backend]:BACKEND:(wpaperd swaybg hyprpaper)' \
'--backend=[Wallpaper setter backend]:BACKEND:(wpaperd swaybg hyprpaper)' \
'-d[Enable daemon mode, will watch and resplit on output changes]' \
'--daemon[Enable daemon mode, will watch and resplit on output changes]' \
'-p[Generate a color palette from input image]' \
'--palette[Generate a color palette from input image]' \
'-s[Use swaylock integration]' \
'--swaylock[Use swaylock integration]' \
'-f[Force resplit, skips all image cache checks]' \
'--force-resplit[Force resplit, skips all image cache checks]' \
'-h[Print help]' \
'--help[Print help]' \
'-V[Print version]' \
'--version[Print version]' \
&& ret=0
}

(( $+functions[_rwpspread_commands] )) ||
_rwpspread_commands() {
    local commands; commands=()
    _describe -t commands 'rwpspread commands' commands "$@"
}

if [ "$funcstack[1]" = "_rwpspread" ]; then
    _rwpspread "$@"
else
    compdef _rwpspread rwpspread
fi
